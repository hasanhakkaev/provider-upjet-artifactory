---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: settingv2s.ldapsettingv2.crossplane.io
spec:
  group: ldapsettingv2.crossplane.io
  names:
    categories:
      - crossplane
      - managed
      - artifactory
    kind: SettingV2
    listKind: SettingV2List
    plural: settingv2s
    singular: settingv2
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Synced')].status
          name: SYNCED
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: READY
          type: string
        - jsonPath: .metadata.annotations.crossplane\.io/external-name
          name: EXTERNAL-NAME
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SettingV2 is the Schema for the SettingV2s API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: SettingV2Spec defines the desired state of SettingV2
              properties:
                deletionPolicy:
                  default: Delete
                  description: |-
                    DeletionPolicy specifies what will happen to the underlying external
                    when this managed resource is deleted - either "Delete" or "Orphan" the
                    external resource.
                    This field is planned to be deprecated in favor of the ManagementPolicies
                    field in a future release. Currently, both could be set independently and
                    non-default values would be honored if the feature flag is enabled.
                    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  enum:
                    - Orphan
                    - Delete
                  type: string
                forProvider:
                  properties:
                    allowUserToAccessProfile:
                      description: |-
                        (Boolean) Auto created users will have access to their profile page and will be able to perform actions such as generating an API key. Default value is false.
                        Auto created users will have access to their profile page and will be able to perform actions such as generating an API key. Default value is `false`.
                      type: boolean
                    autoCreateUser:
                      description: |-
                        join groups defined in Artifactory. Default value is true.
                        When set, users are automatically created when using LDAP. Otherwise, users are transient and associated with auto-join groups defined in Artifactory. Default value is `true`.
                      type: boolean
                    emailAttribute:
                      description: |-
                        (String) An attribute that can be used to map a user's email address to a user created automatically in Artifactory. Default value ismail.
                        An attribute that can be used to map a user's email address to a user created automatically in Artifactory. Default value is`mail`.
                      type: string
                    enabled:
                      description: |-
                        (Boolean) Flag to enable or disable the ldap setting. Default value is true.
                        Flag to enable or disable the ldap setting. Default value is `true`.
                      type: boolean
                    key:
                      description: |-
                        (String) Ldap setting name.
                        Ldap setting name.
                      type: string
                    ldapPoisoningProtection:
                      description: |-
                        (Boolean) When this is set to true, an empty or missing usernames array will detach all users from the group.
                        When this is set to `true`, an empty or missing usernames array will detach all users from the group.
                      type: boolean
                    ldapUrl:
                      description: |-
                        (String) Location of the LDAP server in the following format: ldap://myldapserver/dc=sampledomain,dc=com
                        Location of the LDAP server in the following format: `ldap://myldapserver/dc=sampledomain,dc=com`
                      type: string
                    managerDn:
                      description: |-
                        (String) The full DN of the user that binds to the LDAP server to perform user searches. Only used with search authentication.
                        The full DN of the user that binds to the LDAP server to perform user searches. Only used with `search` authentication.
                      type: string
                    managerPasswordSecretRef:
                      description: |-
                        (String, Sensitive) The password of the user that binds to the LDAP server to perform the search. Only used with search authentication.
                        The password of the user that binds to the LDAP server to perform the search. Only used with `search` authentication.
                      properties:
                        key:
                          description: The key to select.
                          type: string
                        name:
                          description: Name of the secret.
                          type: string
                        namespace:
                          description: Namespace of the secret.
                          type: string
                      required:
                        - key
                        - name
                        - namespace
                      type: object
                    pagingSupportEnabled:
                      description: |-
                        (Boolean) When set, supports paging results for the LDAP server. This feature requires that the LDAP server supports a PagedResultsControl configuration. Default value is true.
                        When set, supports paging results for the LDAP server. This feature requires that the LDAP server supports a PagedResultsControl configuration. Default value is `true`.
                      type: boolean
                    searchBase:
                      description: |-
                        on enabled, it is possible to enter multiple search base entries separated by a pipe ('|') character.
                        A context name to search in relative to the base DN of the LDAP URL. For example, 'ou=users' With the LDAP Group Add-on enabled, it is possible to enter multiple search base entries separated by a pipe ('|') character.
                      type: string
                    searchFilter:
                      description: |-
                        This searches for a username match on the attribute. Authentication to LDAP is performed from the DN found if successful.
                        A filter expression used to search for the user DN used in LDAP authentication. This is an LDAP search filter (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, and is denoted by '{0}'. Possible examples are: (uid={0}) - This searches for a username match on the attribute. Authentication to LDAP is performed from the DN found if successful.
                      type: string
                    searchSubTree:
                      description: |-
                        (Boolean) When set, enables deep search through the sub tree of the LDAP URL + search base. Default value is true.
                        When set, enables deep search through the sub tree of the LDAP URL + search base. Default value is `true`.
                      type: boolean
                    userDnPattern:
                      description: |-
                        (String) A DN pattern that can be used to log users directly in to LDAP. This pattern is used to create a DN string for 'direct' user authentication where the pattern is relative to the base DN in the LDAP URL. The pattern argument {0} is replaced with the username. This only works if anonymous binding is allowed and a direct user DN can be used, which is not the default case for Active Directory (use User DN search filter instead). Example: uid={0},ou=People. Default value is blank/empty.
                        A DN pattern that can be used to log users directly in to LDAP. This pattern is used to create a DN string for 'direct' user authentication where the pattern is relative to the base DN in the LDAP URL. The pattern argument {0} is replaced with the username. This only works if anonymous binding is allowed and a direct user DN can be used, which is not the default case for Active Directory (use User DN search filter instead). Example: uid={0},ou=People. Default value is blank/empty.
                      type: string
                  type: object
                initProvider:
                  description: |-
                    THIS IS A BETA FIELD. It will be honored
                    unless the Management Policies feature flag is disabled.
                    InitProvider holds the same fields as ForProvider, with the exception
                    of Identifier and other resource reference fields. The fields that are
                    in InitProvider are merged into ForProvider when the resource is created.
                    The same fields are also added to the terraform ignore_changes hook, to
                    avoid updating them after creation. This is useful for fields that are
                    required on creation, but we do not desire to update them after creation,
                    for example because of an external controller is managing them, like an
                    autoscaler.
                  properties:
                    allowUserToAccessProfile:
                      description: |-
                        (Boolean) Auto created users will have access to their profile page and will be able to perform actions such as generating an API key. Default value is false.
                        Auto created users will have access to their profile page and will be able to perform actions such as generating an API key. Default value is `false`.
                      type: boolean
                    autoCreateUser:
                      description: |-
                        join groups defined in Artifactory. Default value is true.
                        When set, users are automatically created when using LDAP. Otherwise, users are transient and associated with auto-join groups defined in Artifactory. Default value is `true`.
                      type: boolean
                    emailAttribute:
                      description: |-
                        (String) An attribute that can be used to map a user's email address to a user created automatically in Artifactory. Default value ismail.
                        An attribute that can be used to map a user's email address to a user created automatically in Artifactory. Default value is`mail`.
                      type: string
                    enabled:
                      description: |-
                        (Boolean) Flag to enable or disable the ldap setting. Default value is true.
                        Flag to enable or disable the ldap setting. Default value is `true`.
                      type: boolean
                    key:
                      description: |-
                        (String) Ldap setting name.
                        Ldap setting name.
                      type: string
                    ldapPoisoningProtection:
                      description: |-
                        (Boolean) When this is set to true, an empty or missing usernames array will detach all users from the group.
                        When this is set to `true`, an empty or missing usernames array will detach all users from the group.
                      type: boolean
                    ldapUrl:
                      description: |-
                        (String) Location of the LDAP server in the following format: ldap://myldapserver/dc=sampledomain,dc=com
                        Location of the LDAP server in the following format: `ldap://myldapserver/dc=sampledomain,dc=com`
                      type: string
                    managerDn:
                      description: |-
                        (String) The full DN of the user that binds to the LDAP server to perform user searches. Only used with search authentication.
                        The full DN of the user that binds to the LDAP server to perform user searches. Only used with `search` authentication.
                      type: string
                    managerPasswordSecretRef:
                      description: |-
                        (String, Sensitive) The password of the user that binds to the LDAP server to perform the search. Only used with search authentication.
                        The password of the user that binds to the LDAP server to perform the search. Only used with `search` authentication.
                      properties:
                        key:
                          description: The key to select.
                          type: string
                        name:
                          description: Name of the secret.
                          type: string
                        namespace:
                          description: Namespace of the secret.
                          type: string
                      required:
                        - key
                        - name
                        - namespace
                      type: object
                    pagingSupportEnabled:
                      description: |-
                        (Boolean) When set, supports paging results for the LDAP server. This feature requires that the LDAP server supports a PagedResultsControl configuration. Default value is true.
                        When set, supports paging results for the LDAP server. This feature requires that the LDAP server supports a PagedResultsControl configuration. Default value is `true`.
                      type: boolean
                    searchBase:
                      description: |-
                        on enabled, it is possible to enter multiple search base entries separated by a pipe ('|') character.
                        A context name to search in relative to the base DN of the LDAP URL. For example, 'ou=users' With the LDAP Group Add-on enabled, it is possible to enter multiple search base entries separated by a pipe ('|') character.
                      type: string
                    searchFilter:
                      description: |-
                        This searches for a username match on the attribute. Authentication to LDAP is performed from the DN found if successful.
                        A filter expression used to search for the user DN used in LDAP authentication. This is an LDAP search filter (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, and is denoted by '{0}'. Possible examples are: (uid={0}) - This searches for a username match on the attribute. Authentication to LDAP is performed from the DN found if successful.
                      type: string
                    searchSubTree:
                      description: |-
                        (Boolean) When set, enables deep search through the sub tree of the LDAP URL + search base. Default value is true.
                        When set, enables deep search through the sub tree of the LDAP URL + search base. Default value is `true`.
                      type: boolean
                    userDnPattern:
                      description: |-
                        (String) A DN pattern that can be used to log users directly in to LDAP. This pattern is used to create a DN string for 'direct' user authentication where the pattern is relative to the base DN in the LDAP URL. The pattern argument {0} is replaced with the username. This only works if anonymous binding is allowed and a direct user DN can be used, which is not the default case for Active Directory (use User DN search filter instead). Example: uid={0},ou=People. Default value is blank/empty.
                        A DN pattern that can be used to log users directly in to LDAP. This pattern is used to create a DN string for 'direct' user authentication where the pattern is relative to the base DN in the LDAP URL. The pattern argument {0} is replaced with the username. This only works if anonymous binding is allowed and a direct user DN can be used, which is not the default case for Active Directory (use User DN search filter instead). Example: uid={0},ou=People. Default value is blank/empty.
                      type: string
                  type: object
                managementPolicies:
                  default:
                    - '*'
                  description: |-
                    THIS IS A BETA FIELD. It is on by default but can be opted out
                    through a Crossplane feature flag.
                    ManagementPolicies specify the array of actions Crossplane is allowed to
                    take on the managed and external resources.
                    This field is planned to replace the DeletionPolicy field in a future
                    release. Currently, both could be set independently and non-default
                    values would be honored if the feature flag is enabled. If both are
                    custom, the DeletionPolicy field will be ignored.
                    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                  items:
                    description: |-
                      A ManagementAction represents an action that the Crossplane controllers
                      can take on an external resource.
                    enum:
                      - Observe
                      - Create
                      - Update
                      - Delete
                      - LateInitialize
                      - '*'
                    type: string
                  type: array
                providerConfigRef:
                  default:
                    name: default
                  description: |-
                    ProviderConfigReference specifies how the provider that will be used to
                    create, observe, update, and delete this managed resource should be
                    configured.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: |-
                            Resolution specifies whether resolution of this reference is required.
                            The default is 'Required', which means the reconcile will fail if the
                            reference cannot be resolved. 'Optional' means this reference will be
                            a no-op if it cannot be resolved.
                          enum:
                            - Required
                            - Optional
                          type: string
                        resolve:
                          description: |-
                            Resolve specifies when this reference should be resolved. The default
                            is 'IfNotPresent', which will attempt to resolve the reference only when
                            the corresponding field is not present. Use 'Always' to resolve the
                            reference on every reconcile.
                          enum:
                            - Always
                            - IfNotPresent
                          type: string
                      type: object
                  required:
                    - name
                  type: object
                publishConnectionDetailsTo:
                  description: |-
                    PublishConnectionDetailsTo specifies the connection secret config which
                    contains a name, metadata and a reference to secret store config to
                    which any connection details for this managed resource should be written.
                    Connection details frequently include the endpoint, username,
                    and password required to connect to the managed resource.
                  properties:
                    configRef:
                      default:
                        name: default
                      description: |-
                        SecretStoreConfigRef specifies which secret store config should be used
                        for this ConnectionSecret.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                                - Required
                                - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                                - Always
                                - IfNotPresent
                              type: string
                          type: object
                      required:
                        - name
                      type: object
                    metadata:
                      description: Metadata is the metadata for connection secret.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            Annotations are the annotations to be added to connection secret.
                            - For Kubernetes secrets, this will be used as "metadata.annotations".
                            - It is up to Secret Store implementation for others store types.
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            Labels are the labels/tags to be added to connection secret.
                            - For Kubernetes secrets, this will be used as "metadata.labels".
                            - It is up to Secret Store implementation for others store types.
                          type: object
                        type:
                          description: |-
                            Type is the SecretType for the connection secret.
                            - Only valid for Kubernetes Secret Stores.
                          type: string
                      type: object
                    name:
                      description: Name is the name of the connection secret.
                      type: string
                  required:
                    - name
                  type: object
                writeConnectionSecretToRef:
                  description: |-
                    WriteConnectionSecretToReference specifies the namespace and name of a
                    Secret to which any connection details for this managed resource should
                    be written. Connection details frequently include the endpoint, username,
                    and password required to connect to the managed resource.
                    This field is planned to be replaced in a future release in favor of
                    PublishConnectionDetailsTo. Currently, both could be set independently
                    and connection details would be published to both without affecting
                    each other.
                  properties:
                    name:
                      description: Name of the secret.
                      type: string
                    namespace:
                      description: Namespace of the secret.
                      type: string
                  required:
                    - name
                    - namespace
                  type: object
              required:
                - forProvider
              type: object
              x-kubernetes-validations:
                - message: spec.forProvider.key is a required parameter
                  rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.key)
                || (has(self.initProvider) && has(self.initProvider.key))'
                - message: spec.forProvider.ldapUrl is a required parameter
                  rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.ldapUrl)
                || (has(self.initProvider) && has(self.initProvider.ldapUrl))'
            status:
              description: SettingV2Status defines the observed state of SettingV2.
              properties:
                atProvider:
                  properties:
                    allowUserToAccessProfile:
                      description: |-
                        (Boolean) Auto created users will have access to their profile page and will be able to perform actions such as generating an API key. Default value is false.
                        Auto created users will have access to their profile page and will be able to perform actions such as generating an API key. Default value is `false`.
                      type: boolean
                    autoCreateUser:
                      description: |-
                        join groups defined in Artifactory. Default value is true.
                        When set, users are automatically created when using LDAP. Otherwise, users are transient and associated with auto-join groups defined in Artifactory. Default value is `true`.
                      type: boolean
                    emailAttribute:
                      description: |-
                        (String) An attribute that can be used to map a user's email address to a user created automatically in Artifactory. Default value ismail.
                        An attribute that can be used to map a user's email address to a user created automatically in Artifactory. Default value is`mail`.
                      type: string
                    enabled:
                      description: |-
                        (Boolean) Flag to enable or disable the ldap setting. Default value is true.
                        Flag to enable or disable the ldap setting. Default value is `true`.
                      type: boolean
                    id:
                      description: (String) The ID of this resource.
                      type: string
                    key:
                      description: |-
                        (String) Ldap setting name.
                        Ldap setting name.
                      type: string
                    ldapPoisoningProtection:
                      description: |-
                        (Boolean) When this is set to true, an empty or missing usernames array will detach all users from the group.
                        When this is set to `true`, an empty or missing usernames array will detach all users from the group.
                      type: boolean
                    ldapUrl:
                      description: |-
                        (String) Location of the LDAP server in the following format: ldap://myldapserver/dc=sampledomain,dc=com
                        Location of the LDAP server in the following format: `ldap://myldapserver/dc=sampledomain,dc=com`
                      type: string
                    managerDn:
                      description: |-
                        (String) The full DN of the user that binds to the LDAP server to perform user searches. Only used with search authentication.
                        The full DN of the user that binds to the LDAP server to perform user searches. Only used with `search` authentication.
                      type: string
                    pagingSupportEnabled:
                      description: |-
                        (Boolean) When set, supports paging results for the LDAP server. This feature requires that the LDAP server supports a PagedResultsControl configuration. Default value is true.
                        When set, supports paging results for the LDAP server. This feature requires that the LDAP server supports a PagedResultsControl configuration. Default value is `true`.
                      type: boolean
                    searchBase:
                      description: |-
                        on enabled, it is possible to enter multiple search base entries separated by a pipe ('|') character.
                        A context name to search in relative to the base DN of the LDAP URL. For example, 'ou=users' With the LDAP Group Add-on enabled, it is possible to enter multiple search base entries separated by a pipe ('|') character.
                      type: string
                    searchFilter:
                      description: |-
                        This searches for a username match on the attribute. Authentication to LDAP is performed from the DN found if successful.
                        A filter expression used to search for the user DN used in LDAP authentication. This is an LDAP search filter (as defined in 'RFC 2254') with optional arguments. In this case, the username is the only argument, and is denoted by '{0}'. Possible examples are: (uid={0}) - This searches for a username match on the attribute. Authentication to LDAP is performed from the DN found if successful.
                      type: string
                    searchSubTree:
                      description: |-
                        (Boolean) When set, enables deep search through the sub tree of the LDAP URL + search base. Default value is true.
                        When set, enables deep search through the sub tree of the LDAP URL + search base. Default value is `true`.
                      type: boolean
                    userDnPattern:
                      description: |-
                        (String) A DN pattern that can be used to log users directly in to LDAP. This pattern is used to create a DN string for 'direct' user authentication where the pattern is relative to the base DN in the LDAP URL. The pattern argument {0} is replaced with the username. This only works if anonymous binding is allowed and a direct user DN can be used, which is not the default case for Active Directory (use User DN search filter instead). Example: uid={0},ou=People. Default value is blank/empty.
                        A DN pattern that can be used to log users directly in to LDAP. This pattern is used to create a DN string for 'direct' user authentication where the pattern is relative to the base DN in the LDAP URL. The pattern argument {0} is replaced with the username. This only works if anonymous binding is allowed and a direct user DN can be used, which is not the default case for Active Directory (use User DN search filter instead). Example: uid={0},ou=People. Default value is blank/empty.
                      type: string
                  type: object
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from
                          one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True,
                          False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                observedGeneration:
                  description: |-
                    ObservedGeneration is the latest metadata.generation
                    which resulted in either a ready state, or stalled due to error
                    it can not recover from without human intervention.
                  format: int64
                  type: integer
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: { }
