//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSetting) DeepCopyInto(out *GroupSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSetting.
func (in *GroupSetting) DeepCopy() *GroupSetting {
	if in == nil {
		return nil
	}
	out := new(GroupSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSettingInitParameters) DeepCopyInto(out *GroupSettingInitParameters) {
	*out = *in
	if in.DescriptionAttribute != nil {
		in, out := &in.DescriptionAttribute, &out.DescriptionAttribute
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.GroupBaseDn != nil {
		in, out := &in.GroupBaseDn, &out.GroupBaseDn
		*out = new(string)
		**out = **in
	}
	if in.GroupMemberAttribute != nil {
		in, out := &in.GroupMemberAttribute, &out.GroupMemberAttribute
		*out = new(string)
		**out = **in
	}
	if in.GroupNameAttribute != nil {
		in, out := &in.GroupNameAttribute, &out.GroupNameAttribute
		*out = new(string)
		**out = **in
	}
	if in.LdapSettingKey != nil {
		in, out := &in.LdapSettingKey, &out.LdapSettingKey
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	if in.SubTree != nil {
		in, out := &in.SubTree, &out.SubTree
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSettingInitParameters.
func (in *GroupSettingInitParameters) DeepCopy() *GroupSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSettingList) DeepCopyInto(out *GroupSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GroupSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSettingList.
func (in *GroupSettingList) DeepCopy() *GroupSettingList {
	if in == nil {
		return nil
	}
	out := new(GroupSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSettingObservation) DeepCopyInto(out *GroupSettingObservation) {
	*out = *in
	if in.DescriptionAttribute != nil {
		in, out := &in.DescriptionAttribute, &out.DescriptionAttribute
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.GroupBaseDn != nil {
		in, out := &in.GroupBaseDn, &out.GroupBaseDn
		*out = new(string)
		**out = **in
	}
	if in.GroupMemberAttribute != nil {
		in, out := &in.GroupMemberAttribute, &out.GroupMemberAttribute
		*out = new(string)
		**out = **in
	}
	if in.GroupNameAttribute != nil {
		in, out := &in.GroupNameAttribute, &out.GroupNameAttribute
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LdapSettingKey != nil {
		in, out := &in.LdapSettingKey, &out.LdapSettingKey
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	if in.SubTree != nil {
		in, out := &in.SubTree, &out.SubTree
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSettingObservation.
func (in *GroupSettingObservation) DeepCopy() *GroupSettingObservation {
	if in == nil {
		return nil
	}
	out := new(GroupSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSettingParameters) DeepCopyInto(out *GroupSettingParameters) {
	*out = *in
	if in.DescriptionAttribute != nil {
		in, out := &in.DescriptionAttribute, &out.DescriptionAttribute
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.GroupBaseDn != nil {
		in, out := &in.GroupBaseDn, &out.GroupBaseDn
		*out = new(string)
		**out = **in
	}
	if in.GroupMemberAttribute != nil {
		in, out := &in.GroupMemberAttribute, &out.GroupMemberAttribute
		*out = new(string)
		**out = **in
	}
	if in.GroupNameAttribute != nil {
		in, out := &in.GroupNameAttribute, &out.GroupNameAttribute
		*out = new(string)
		**out = **in
	}
	if in.LdapSettingKey != nil {
		in, out := &in.LdapSettingKey, &out.LdapSettingKey
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	if in.SubTree != nil {
		in, out := &in.SubTree, &out.SubTree
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSettingParameters.
func (in *GroupSettingParameters) DeepCopy() *GroupSettingParameters {
	if in == nil {
		return nil
	}
	out := new(GroupSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSettingSpec) DeepCopyInto(out *GroupSettingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSettingSpec.
func (in *GroupSettingSpec) DeepCopy() *GroupSettingSpec {
	if in == nil {
		return nil
	}
	out := new(GroupSettingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSettingStatus) DeepCopyInto(out *GroupSettingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSettingStatus.
func (in *GroupSettingStatus) DeepCopy() *GroupSettingStatus {
	if in == nil {
		return nil
	}
	out := new(GroupSettingStatus)
	in.DeepCopyInto(out)
	return out
}
