//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationInitParameters) DeepCopyInto(out *ReplicationInitParameters) {
	*out = *in
	if in.CheckBinaryExistenceInFilestore != nil {
		in, out := &in.CheckBinaryExistenceInFilestore, &out.CheckBinaryExistenceInFilestore
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExcludePathPrefixPattern != nil {
		in, out := &in.ExcludePathPrefixPattern, &out.ExcludePathPrefixPattern
		*out = new(string)
		**out = **in
	}
	if in.IncludePathPrefixPattern != nil {
		in, out := &in.IncludePathPrefixPattern, &out.IncludePathPrefixPattern
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(string)
		**out = **in
	}
	if in.ReplicationKey != nil {
		in, out := &in.ReplicationKey, &out.ReplicationKey
		*out = new(string)
		**out = **in
	}
	if in.SocketTimeoutMillis != nil {
		in, out := &in.SocketTimeoutMillis, &out.SocketTimeoutMillis
		*out = new(float64)
		**out = **in
	}
	if in.SyncDeletes != nil {
		in, out := &in.SyncDeletes, &out.SyncDeletes
		*out = new(bool)
		**out = **in
	}
	if in.SyncProperties != nil {
		in, out := &in.SyncProperties, &out.SyncProperties
		*out = new(bool)
		**out = **in
	}
	if in.SyncStatistics != nil {
		in, out := &in.SyncStatistics, &out.SyncStatistics
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationInitParameters.
func (in *ReplicationInitParameters) DeepCopy() *ReplicationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationObservation) DeepCopyInto(out *ReplicationObservation) {
	*out = *in
	if in.CheckBinaryExistenceInFilestore != nil {
		in, out := &in.CheckBinaryExistenceInFilestore, &out.CheckBinaryExistenceInFilestore
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExcludePathPrefixPattern != nil {
		in, out := &in.ExcludePathPrefixPattern, &out.ExcludePathPrefixPattern
		*out = new(string)
		**out = **in
	}
	if in.IncludePathPrefixPattern != nil {
		in, out := &in.IncludePathPrefixPattern, &out.IncludePathPrefixPattern
		*out = new(string)
		**out = **in
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(string)
		**out = **in
	}
	if in.ReplicationKey != nil {
		in, out := &in.ReplicationKey, &out.ReplicationKey
		*out = new(string)
		**out = **in
	}
	if in.SocketTimeoutMillis != nil {
		in, out := &in.SocketTimeoutMillis, &out.SocketTimeoutMillis
		*out = new(float64)
		**out = **in
	}
	if in.SyncDeletes != nil {
		in, out := &in.SyncDeletes, &out.SyncDeletes
		*out = new(bool)
		**out = **in
	}
	if in.SyncProperties != nil {
		in, out := &in.SyncProperties, &out.SyncProperties
		*out = new(bool)
		**out = **in
	}
	if in.SyncStatistics != nil {
		in, out := &in.SyncStatistics, &out.SyncStatistics
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationObservation.
func (in *ReplicationObservation) DeepCopy() *ReplicationObservation {
	if in == nil {
		return nil
	}
	out := new(ReplicationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationParameters) DeepCopyInto(out *ReplicationParameters) {
	*out = *in
	if in.CheckBinaryExistenceInFilestore != nil {
		in, out := &in.CheckBinaryExistenceInFilestore, &out.CheckBinaryExistenceInFilestore
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExcludePathPrefixPattern != nil {
		in, out := &in.ExcludePathPrefixPattern, &out.ExcludePathPrefixPattern
		*out = new(string)
		**out = **in
	}
	if in.IncludePathPrefixPattern != nil {
		in, out := &in.IncludePathPrefixPattern, &out.IncludePathPrefixPattern
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(string)
		**out = **in
	}
	if in.ReplicationKey != nil {
		in, out := &in.ReplicationKey, &out.ReplicationKey
		*out = new(string)
		**out = **in
	}
	if in.SocketTimeoutMillis != nil {
		in, out := &in.SocketTimeoutMillis, &out.SocketTimeoutMillis
		*out = new(float64)
		**out = **in
	}
	if in.SyncDeletes != nil {
		in, out := &in.SyncDeletes, &out.SyncDeletes
		*out = new(bool)
		**out = **in
	}
	if in.SyncProperties != nil {
		in, out := &in.SyncProperties, &out.SyncProperties
		*out = new(bool)
		**out = **in
	}
	if in.SyncStatistics != nil {
		in, out := &in.SyncStatistics, &out.SyncStatistics
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationParameters.
func (in *ReplicationParameters) DeepCopy() *ReplicationParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryMultiReplication) DeepCopyInto(out *RepositoryMultiReplication) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryMultiReplication.
func (in *RepositoryMultiReplication) DeepCopy() *RepositoryMultiReplication {
	if in == nil {
		return nil
	}
	out := new(RepositoryMultiReplication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryMultiReplication) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryMultiReplicationInitParameters) DeepCopyInto(out *RepositoryMultiReplicationInitParameters) {
	*out = *in
	if in.CronExp != nil {
		in, out := &in.CronExp, &out.CronExp
		*out = new(string)
		**out = **in
	}
	if in.EnableEventReplication != nil {
		in, out := &in.EnableEventReplication, &out.EnableEventReplication
		*out = new(bool)
		**out = **in
	}
	if in.Replication != nil {
		in, out := &in.Replication, &out.Replication
		*out = make([]ReplicationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RepoKey != nil {
		in, out := &in.RepoKey, &out.RepoKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryMultiReplicationInitParameters.
func (in *RepositoryMultiReplicationInitParameters) DeepCopy() *RepositoryMultiReplicationInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryMultiReplicationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryMultiReplicationList) DeepCopyInto(out *RepositoryMultiReplicationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RepositoryMultiReplication, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryMultiReplicationList.
func (in *RepositoryMultiReplicationList) DeepCopy() *RepositoryMultiReplicationList {
	if in == nil {
		return nil
	}
	out := new(RepositoryMultiReplicationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryMultiReplicationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryMultiReplicationObservation) DeepCopyInto(out *RepositoryMultiReplicationObservation) {
	*out = *in
	if in.CronExp != nil {
		in, out := &in.CronExp, &out.CronExp
		*out = new(string)
		**out = **in
	}
	if in.EnableEventReplication != nil {
		in, out := &in.EnableEventReplication, &out.EnableEventReplication
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Replication != nil {
		in, out := &in.Replication, &out.Replication
		*out = make([]ReplicationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RepoKey != nil {
		in, out := &in.RepoKey, &out.RepoKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryMultiReplicationObservation.
func (in *RepositoryMultiReplicationObservation) DeepCopy() *RepositoryMultiReplicationObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryMultiReplicationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryMultiReplicationParameters) DeepCopyInto(out *RepositoryMultiReplicationParameters) {
	*out = *in
	if in.CronExp != nil {
		in, out := &in.CronExp, &out.CronExp
		*out = new(string)
		**out = **in
	}
	if in.EnableEventReplication != nil {
		in, out := &in.EnableEventReplication, &out.EnableEventReplication
		*out = new(bool)
		**out = **in
	}
	if in.Replication != nil {
		in, out := &in.Replication, &out.Replication
		*out = make([]ReplicationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RepoKey != nil {
		in, out := &in.RepoKey, &out.RepoKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryMultiReplicationParameters.
func (in *RepositoryMultiReplicationParameters) DeepCopy() *RepositoryMultiReplicationParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryMultiReplicationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryMultiReplicationSpec) DeepCopyInto(out *RepositoryMultiReplicationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryMultiReplicationSpec.
func (in *RepositoryMultiReplicationSpec) DeepCopy() *RepositoryMultiReplicationSpec {
	if in == nil {
		return nil
	}
	out := new(RepositoryMultiReplicationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryMultiReplicationStatus) DeepCopyInto(out *RepositoryMultiReplicationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryMultiReplicationStatus.
func (in *RepositoryMultiReplicationStatus) DeepCopy() *RepositoryMultiReplicationStatus {
	if in == nil {
		return nil
	}
	out := new(RepositoryMultiReplicationStatus)
	in.DeepCopyInto(out)
	return out
}
